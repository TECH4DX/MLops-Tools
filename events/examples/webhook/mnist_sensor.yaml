apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: test-dep
      eventSourceName: webhook
      eventName: example
  triggers:
    - template:
        name: webhook-workflow-trigger
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: mnist-
              spec:
                entrypoint: mnist-controller
                serviceAccountName: operate-workflow-sa
                onExit: delete
                arguments:
                  parameters:
                  - name: image-name
                    # the value will get overridden by event payload from test-dep
                    value: image-default
                  - name: image-version
                    value: v0.0
                  - name: dockerhub-username
                    value: xx
                  - name: dockerhub-password
                    vaule: xx
                templates:
                - name: mnist-controller
                  inputs:
                    parameters:
                    - name: image-name
                    - name: image-version
                    - name: dockerhub-username
                    - name: dockerhub-password
                  steps:
                  - - name: image-build
                      template: build
                      arguments:
                        parameters:
                        - name: image-name
                          value: "{{inputs.parameters.image-name}}"
                        - name: image-version
                          value: "{{inputs.parameters.image-version}}"
                        - name: dockerhub-username
                          value: "{{inputs.parameters.dockerhub-username}}"
                        - name: dockerhub-password
                          value: "{{inputs.parameters.dockerhub-password}}"
                  - - name: mnist-train
                      template: train
                  - - name: mnist-eval
                      template: eval
                      arguments:
                        artifacts:
                        - name: model-path
                          from: "{{steps.mnist-train.outputs.artifacts.model-saved}}"
                    - name: mnist-serving
                      template: server
                      arguments:
                        artifacts:
                        - name: model-path
                          from: "{{steps.mnist-train.outputs.artifacts.model-saved}}"
                    - name: mnist-web
                      template: create-service

                - name: build
                  inputs:
                    parameters:
                      - name: image-name
                      - name: image-version
                      - name: dockerhub-username
                      - name: dockerhub-password
                  script:
                    image: docker:latest
                    imagePullPolicy: Always
                    env:
                    - name: IMAGE-NAME
                      value: "{{inputs.parameters.image-name}}"
                    - name: IMAGE-VERSION
                      value: "{{inputs.parameters.image-version}}"
                    - name: USERNAME
                      value: "{{inputs.parameters.dockerhub-username}}"
                    - name: PASSWD
                      value: "{{inputs.parameters.dockerhub-password}}"
                    command: ["/bin/sh"]
                    #args: ["{{inputs.parameters.image-name}}"]
                    source: |
                      docker login --username=${USERNAME} --password=${PASSWD}
                      docker build -t guoqiangqi/auto-build:v1.0 https://github.com/TECH4DX/MLops-Tools/raw/main/mnist/docker/Dockerfile
                      docker push guoqiangqi/auto-build:v1.0

                    volumeMounts:
                      - name: docker-sock
                        readOnly: true
                        mountPath: /var/run/docker.sock

                - name: train
                  container:
                    image: guoqiangqi/mnist-example:v1.0
                    imagePullPolicy: Always
                    env:
                    - name: IS_TRAIN
                      value: "True"
                    - name: NUM_STEPS
                      value: "10"
                    command: ['python3']
                    args: ["mnist_train_eval.py"]
                  outputs:
                    artifacts:
                    - name: model-saved
                      path: /mnist-example/ckpt
                      gcs:
                        bucket: mlops-example-bucket
                        key: mnist-example-models-demo
                        serviceAccountKeySecret:
                          name: mlops-bucket-serviceaccount
                          key: serviceAccountKey

                - name: eval
                  inputs:
                    artifacts:
                    - name: model-path
                      path: /mnist-example/ckpt
                  container:
                    image: guoqiangqi/mnist-example:v1.0
                    imagePullPolicy: Always
                    env:
                    - name: IS_TRAIN
                      value: "False"
                    command: ['python3']
                    args: ["mnist_train_eval.py"]

                - name: server
                  inputs:
                    artifacts:
                    - name: model-path
                      path: /mnist-serving/mnist/data/ckpt
                  container:
                    image: guoqiangqi/mnist-serving:v1.0
                    imagePullPolicy: Always
                    ports:
                    - containerPort: 9003
                    command: ['python3']
                    args: ["main.py"]
                  metadata:
                    labels:
                      app: mnist-web

                - name: create-service
                  resource:
                      action: create
                      manifest: |
                        apiVersion: v1
                        kind: Service
                        metadata:
                          name: mnist-web
                          labels:
                            app: mnist-web
                        spec:
                          ports:
                            - port: 9003
                              targetPort: 9003
                              nodePort: 9004
                              protocol: TCP
                          type: NodePort
                          selector:
                            app: mnist-web

                - name: delete
                  resource:
                      action: delete
                      manifest: |
                        apiVersion: v1
                        kind: Service
                        metadata:
                          name: mnist-web
                          labels:
                            app: mnist-web
                        spec:
                          ports:
                            - port: 9003
                              targetPort: 9003
                              nodePort: 9004
                              protocol: TCP
                          type: NodePort
                          selector:
                            app: mnist-web
                volumes:
                  - name: docker-sock
                    hostPath:
                      path: /var/run/docker.sock
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: body.config.image-name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: test-dep
                dataKey: body.config.image-version
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: test-dep
                dataKey: body.config.dockerhub-username
              dest: spec.arguments.parameters.2.value
            - src:
                dependencyName: test-dep
                dataKey: body.config.dockerhub-password
              dest: spec.arguments.parameters.3.value
